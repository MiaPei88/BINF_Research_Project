install.packages("tidyverse")
install.packages("dplyr")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
q()
#install.packages("tidyverse")
library(tidyverse)
#install.packages("tidyverse")
library("tidyverse")
install.packages("tidyverse")
All_Eggplant_Repeat <- read.csv("All_Clusters_RE2_MiaPei.csv")
# Load required packages
library(dplyr)
# Set the current working directory
setwd("~/Documents/GitHub/BINF_Research_Project/RE2_output")
All_Eggplant_Repeat <- read.csv("All_Clusters_RE2_MiaPei.csv")
View(All_Eggplant_Repeat)
View(All_Eggplant_Repeat)
All_palms_GS$Species
All_Eggplant_Repeat$Species_Name
summary(All_Eggplant_Repeat$Species_Name)
unique(All_Eggplant_Repeat$Species_Name)
row.names(All_Eggplant_Repeat$Species_Name)
View(All_Eggplant_Repeat)
row.names(All_Eggplant_Repeat) <- All_Eggplant_Repeat$Species_Name
# Calculate the total 'Size_adjusted' for each species for rows containing 'organelle'
total_organelle_size_by_species <- All_Eggplant_Repeat %>%
filter(grepl("organelle", Final_annotation)) %>%
group_by(Species) %>%
summarise(total_organelle_size_adjusted = sum(Size_adjusted, na.rm = TRUE))
# Calculate the total 'Size_adjusted' for each species for rows containing 'organelle'
total_organelle_size_by_species <- All_Eggplant_Repeat %>%
filter(grepl("organelle", Final_annotation)) %>%
group_by(Species_Name) %>%
summarise(total_organelle_size_adjusted = sum(Size_adjusted, na.rm = TRUE))
View(total_organelle_size_by_species)
View(total_organelle_size_by_species)
rm(total_organelle_size_by_species)
# Read the combined cluster table
All_Eggplant_Repeat <- read.csv("All_Clusters_RE2_MiaPei.csv")
# Check the number of species
unique(All_Eggplant_Repeat$Species_Name)
# Calculate the total 'Size_adjusted' for each species for rows containing 'organelle'
number_of_reads_by_species <- All_Eggplant_Repeat %>%
filter(grepl("organelle", Final_annotation)) %>%
group_by(Species_Name) %>%
summarise(total_organelle_size_adjusted = sum(Size_adjusted, na.rm = TRUE))
View(number_of_reads_by_species)
N_reads_analyzed_GS <- read.csv("N_reads_analyzed_MiaPei.csv")
View(N_reads_analyzed_GS)
?read.csv
N_reads_analyzed_GS <- read.csv("N_reads_analyzed_MiaPei.csv", sep = "\t")
View(N_reads_analyzed_GS)
View(number_of_reads_by_species)
# Calculate the total 'Size_adjusted' for each species for rows containing 'organelle'
N_reads_analyzed_GS <- All_Eggplant_Repeat %>%
filter(grepl("organelle", Final_annotation)) %>%
group_by(Species_Name) %>%
summarise(total_organelle_size_adjusted = sum(Size_adjusted, na.rm = TRUE))
View(N_reads_analyzed_GS)
# Read the table with number of analyzed reads and genome size
N_reads_analyzed_GS <- read.csv("N_reads_analyzed_MiaPei.csv", sep = "\t")
# Calculate the total 'Size_adjusted' for each species for rows containing 'organelle'
number_of_reads_by_species <- All_Eggplant_Repeat %>%
filter(grepl("organelle", Final_annotation)) %>%
group_by(Species_Name) %>%
summarise(total_organelle_size_adjusted = sum(Size_adjusted, na.rm = TRUE))
N_reads_analyzed_GS <- N_reads_analyzed_GS %>%
left_join(number_of_reads_by_species, by = "Species_Name")
View(N_reads_analyzed_GS)
View(N_reads_analyzed_GS)
?summarise
# Add a new column for the number of reads representative of nuclear sequences as:
# the number of analyzed reads - the number of reads annotated as organelle
N_reads_analyzed_GS$number_of_reads_nuclear <- N_reads_analyzed_GS[,3] - N_reads_analyzed_GS[,5]
View(N_reads_analyzed_GS)
# Read the table with number of analyzed reads and genome size
N_reads_analyzed_GS <- read.csv("N_reads_analyzed_MiaPei.csv", sep = "\t")
# Check the number of species
unique(All_Eggplant_Repeat$Species_Name)
# Calculate the total 'Size_adjusted' for each species for rows containing 'organelle'
Number_of_reads_by_species <- All_Eggplant_Repeat %>%
filter(grepl("organelle", Final_annotation)) %>%
group_by(Species_Name) %>%
summarise(total_organelle_size_adjusted = sum(Size_adjusted, na.rm = TRUE))
# Append the column of total_organelle size
N_reads_analyzed_GS <- N_reads_analyzed_GS %>%
left_join(Number_of_reads_by_species, by = "Species_Name")
# Add a new column for the number of reads representative of nuclear sequences as:
# the number of analyzed reads - the number of reads annotated as organelle
N_reads_analyzed_GS$Number_of_reads_nuclear <- N_reads_analyzed_GS[,3] - N_reads_analyzed_GS[,5]
View(N_reads_analyzed_GS)
# Read the table with number of analyzed reads and genome size
N_reads_analyzed_GS <- read.csv("N_reads_analyzed_MiaPei.csv", sep = "\t")
# Check the number of species
unique(All_Eggplant_Repeat$Species_Name)
# Calculate the total 'Size_adjusted' for each species for rows containing 'organelle'
number_of_reads_by_species <- All_Eggplant_Repeat %>%
filter(grepl("organelle", Final_annotation)) %>%
group_by(Species_Name) %>%
summarise(Total_organelle_size_adjusted = sum(Size_adjusted, na.rm = TRUE))
# Append the column of total_organelle size
N_reads_analyzed_GS <- N_reads_analyzed_GS %>%
left_join(Number_of_reads_by_species, by = "Species_Name")
# Add a new column for the number of reads representative of nuclear sequences as:
# the number of analyzed reads - the number of reads annotated as organelle
N_reads_analyzed_GS$Number_of_reads_nuclear <- N_reads_analyzed_GS[,3] - N_reads_analyzed_GS[,5]
rm(Number_of_reads_by_species)
View(number_of_reads_by_species)
View(N_reads_analyzed_GS)
# Calculate the total 'Size_adjusted' for each species for rows containing 'organelle'
number_of_reads_by_species <- All_Eggplant_Repeat %>%
filter(grepl("organelle", Final_annotation)) %>%
group_by(Species_Name) %>%
summarise(Total_organelle_size_adjusted = sum(Size_adjusted, na.rm = TRUE))
# Append the column of total_organelle size
N_reads_analyzed_GS <- N_reads_analyzed_GS %>%
left_join(Number_of_reads_by_species, by = "Species_Name")
# Append the column of total_organelle size
N_reads_analyzed_GS <- N_reads_analyzed_GS %>%
left_join(number_of_reads_by_species, by = "Species_Name")
# Add a new column for the number of reads representative of nuclear sequences as:
# the number of analyzed reads - the number of reads annotated as organelle
N_reads_analyzed_GS$Number_of_reads_nuclear <- N_reads_analyzed_GS[,3] - N_reads_analyzed_GS[,5]
View(N_reads_analyzed_GS)
# Read the table with number of analyzed reads and genome size
N_reads_analyzed_GS <- read.csv("N_reads_analyzed_MiaPei.csv", sep = "\t")
# Check the number of species
unique(All_Eggplant_Repeat$Species_Name)
# Calculate the total 'Size_adjusted' for each species for rows containing 'organelle'
number_of_reads_by_species <- All_Eggplant_Repeat %>%
filter(grepl("organelle", Final_annotation)) %>%
group_by(Species_Name) %>%
summarise(Total_organelle_size_adjusted = sum(Size_adjusted, na.rm = TRUE))
# Append the column of total_organelle size
N_reads_analyzed_GS <- N_reads_analyzed_GS %>%
left_join(number_of_reads_by_species, by = "Species_Name")
# Add a new column for the number of reads representative of nuclear sequences as:
# the number of analyzed reads - the number of reads annotated as organelle
N_reads_analyzed_GS$Number_of_reads_nuclear <- N_reads_analyzed_GS[,3] - N_reads_analyzed_GS[,5]
View(All_Eggplant_Repeat)
View(All_Eggplant_Repeat)
All_Eggplant_Repeat <- All_Eggplant_Repeat[-which(str_detect(All_Eggplant_Repeat$Final_annotation,"organelle")),]
library(tidyverse)
All_Eggplant_Repeat <- All_Eggplant_Repeat[-which(str_detect(All_Eggplant_Repeat$Final_annotation,"organelle")),]
View(All_Eggplant_Repeat)
# Calculate the genomic proportion of individual clusters by dividing the size
# (number of reads; column 4 in All clusters df) of the clusters by Number_of_reads_nuclear
All_Eggplant_Repeat <- left_join(All_Eggplant_Repeat, N_reads_analyzed_GS %>%
select(Species_Name, Number_of_reads_nuclear),
by = "Species_Name") %>%
mutate(Genomic_proportion = Size_adjusted - Number_of_reads_nuclear)
View(All_Eggplant_Repeat)
# Read the combined cluster table
All_Eggplant_Repeat <- read.csv("All_Clusters_RE2_MiaPei.csv")
All_Eggplant_Repeat <- All_Eggplant_Repeat[-which(str_detect(All_Eggplant_Repeat$Final_annotation,"organelle")),]
# Calculate the genomic proportion of individual clusters by dividing the size
# (number of reads; column 4 in All clusters df) of the clusters by Number_of_reads_nuclear
All_Eggplant_Repeat <- left_join(All_Eggplant_Repeat, N_reads_analyzed_GS %>%
select(Species_Name, Number_of_reads_nuclear),
by = "Species_Name") %>%
mutate(Genomic_proportion = Size_adjusted/Number_of_reads_nuclear)
View(All_Eggplant_Repeat)
All_Eggplant_Repeat_ag < -aggregate(Genomic_proportion~Species_Name+Final_annotation, data=All_Eggplant_Repeat, FUN=sum)
summary(All_Eggplant_Repeat$Final_annotation)
unique(All_Eggplant_Repeat$Final_annotation)
All_Eggplant_Repeat[2769,7] <- "ALl/repeat"
All_Eggplant_Repeat[2769,7]
All_Eggplant_Repeat[2769,]
unique(All_Eggplant_Repeat$Final_annotation)
unique(All_Eggplant_Repeat$Final_annotation)
# Read the combined cluster table
All_Eggplant_Repeat <- read.csv("All_Clusters_RE2_MiaPei.csv")
# Read the table with number of analyzed reads and genome size
N_reads_analyzed_GS <- read.csv("N_reads_analyzed_MiaPei.csv", sep = "\t")
# Check the number of species
unique(All_Eggplant_Repeat$Species_Name)
# Calculate the total 'Size_adjusted' for each species for rows containing 'organelle'
number_of_reads_by_species <- All_Eggplant_Repeat %>%
filter(grepl("organelle", Final_annotation)) %>%
group_by(Species_Name) %>%
summarise(Total_organelle_size_adjusted = sum(Size_adjusted, na.rm = TRUE))
# Append the column of total_organelle size
N_reads_analyzed_GS <- N_reads_analyzed_GS %>%
left_join(number_of_reads_by_species, by = "Species_Name")
# Add a new column for the number of reads representative of nuclear sequences as:
# the number of analyzed reads - the number of reads annotated as organelle
# (Because in the output from RE2 of this project do not have contamination,
# we don't need to minus the number of reads of contamination here.)
N_reads_analyzed_GS$Number_of_reads_nuclear <- N_reads_analyzed_GS[,3] - N_reads_analyzed_GS[,5]
All_Eggplant_Repeat <- All_Eggplant_Repeat[-which(str_detect(All_Eggplant_Repeat$Final_annotation,"organelle")),]
# Calculate the genomic proportion of individual clusters by dividing the size
# (number of reads; column 4 in All clusters df) of the clusters by Number_of_reads_nuclear
All_Eggplant_Repeat <- left_join(All_Eggplant_Repeat, N_reads_analyzed_GS %>%
select(Species_Name, Number_of_reads_nuclear),
by = "Species_Name") %>%
mutate(Genomic_proportion = Size_adjusted/Number_of_reads_nuclear)
unique(All_Eggplant_Repeat$Final_annotation)
# Read the combined cluster table
All_Eggplant_Repeat <- read.csv("All_Clusters_RE2_MiaPei.csv")
# Read the table with number of analyzed reads and genome size
N_reads_analyzed_GS <- read.csv("N_reads_analyzed_MiaPei.csv", sep = "\t")
# Check the number of species
unique(All_Eggplant_Repeat$Species_Name)
# Calculate the total 'Size_adjusted' for each species for rows containing 'organelle'
number_of_reads_by_species <- All_Eggplant_Repeat %>%
filter(grepl("organelle", Final_annotation)) %>%
group_by(Species_Name) %>%
summarise(Total_organelle_size_adjusted = sum(Size_adjusted, na.rm = TRUE))
# Append the column of total_organelle size
N_reads_analyzed_GS <- N_reads_analyzed_GS %>%
left_join(number_of_reads_by_species, by = "Species_Name")
# Add a new column for the number of reads representative of nuclear sequences as:
# the number of analyzed reads - the number of reads annotated as organelle
# (Because in the output from RE2 of this project do not have contamination,
# we don't need to minus the number of reads of contamination here.)
N_reads_analyzed_GS$Number_of_reads_nuclear <- N_reads_analyzed_GS[,3] - N_reads_analyzed_GS[,5]
All_Eggplant_Repeat <- All_Eggplant_Repeat[-which(str_detect(All_Eggplant_Repeat$Final_annotation,"organelle")),]
# Calculate the genomic proportion of individual clusters by dividing the size
# (number of reads; column 4 in All clusters df) of the clusters by Number_of_reads_nuclear
All_Eggplant_Repeat <- left_join(All_Eggplant_Repeat, N_reads_analyzed_GS %>%
select(Species_Name, Number_of_reads_nuclear),
by = "Species_Name") %>%
mutate(Genomic_proportion = Size_adjusted/Number_of_reads_nuclear)
unique(All_Eggplant_Repeat$Final_annotation)
All_Eggplant_Repeat_ag < -aggregate(Genomic_proportion~Species_Name+Final_annotation, data=All_Eggplant_Repeat, FUN=sum)
All_Eggplant_Repeat_ag <- aggregate(Genomic_proportion~Species_Name+Final_annotation, data=All_Eggplant_Repeat, FUN=sum)
View(All_Eggplant_Repeat_ag)
View(All_Eggplant_Repeat_ag)
View(All_Eggplant_Repeat)
# Read the combined cluster table
All_Eggplant_Repeat <- read.csv("All_Clusters_RE2_MiaPei.csv")
# Read the table with number of analyzed reads and genome size
N_reads_analyzed_GS <- read.csv("N_reads_analyzed_MiaPei.csv", sep = "\t")
# Check the number of species
unique(All_Eggplant_Repeat$Species_Name)
# Calculate the total 'Size_adjusted' for each species for rows containing 'organelle'
number_of_reads_by_species <- All_Eggplant_Repeat %>%
filter(grepl("organelle", Final_annotation)) %>%
group_by(Species_Name) %>%
summarise(Total_organelle_size_adjusted = sum(Size_adjusted, na.rm = TRUE))
# Append the column of total_organelle size
N_reads_analyzed_GS <- N_reads_analyzed_GS %>%
left_join(number_of_reads_by_species, by = "Species_Name")
# Add a new column for the number of reads representative of nuclear sequences as:
# the number of analyzed reads - the number of reads annotated as organelle
# (Because in the output from RE2 of this project do not have contamination,
# we don't need to minus the number of reads of contamination here.)
N_reads_analyzed_GS$Number_of_reads_nuclear <- N_reads_analyzed_GS[,3] - N_reads_analyzed_GS[,5]
All_Eggplant_Repeat <- All_Eggplant_Repeat[-which(str_detect(All_Eggplant_Repeat$Final_annotation,"organelle")),]
# Calculate the genomic proportion of individual clusters by dividing the size
# (number of reads; column 4 in All clusters df) of the clusters by Number_of_reads_nuclear
All_Eggplant_Repeat <- left_join(All_Eggplant_Repeat, N_reads_analyzed_GS %>%
select(Species_Name, Number_of_reads_nuclear),
by = "Species_Name") %>%
mutate(Genomic_proportion = Size_adjusted/Number_of_reads_nuclear)
unique(All_Eggplant_Repeat$Final_annotation)
All_Eggplant_Repeat_ag <- aggregate(Genomic_proportion~Species_Name+Final_annotation, data=All_Eggplant_Repeat, FUN=sum)
View(All_Eggplant_Repeat_ag)
# Read the combined cluster table
All_Eggplant_Repeat <- read.csv("All_Clusters_RE2_MiaPei.csv")
# Read the table with number of analyzed reads and genome size
N_reads_analyzed_GS <- read.csv("N_reads_analyzed_MiaPei.csv", sep = "\t")
# Check the number of species
unique(All_Eggplant_Repeat$Species_Name)
# Calculate the total 'Size_adjusted' for each species for rows containing 'organelle'
number_of_reads_by_species <- All_Eggplant_Repeat %>%
filter(grepl("organelle", Final_annotation)) %>%
group_by(Species_Name) %>%
summarise(Total_organelle_size_adjusted = sum(Size_adjusted, na.rm = TRUE))
# Append the column of total_organelle size
N_reads_analyzed_GS <- N_reads_analyzed_GS %>%
left_join(number_of_reads_by_species, by = "Species_Name")
# Add a new column for the number of reads representative of nuclear sequences as:
# the number of analyzed reads - the number of reads annotated as organelle
# (Because in the output from RE2 of this project do not have contamination,
# we don't need to minus the number of reads of contamination here.)
N_reads_analyzed_GS$Number_of_reads_nuclear <- N_reads_analyzed_GS[,3] - N_reads_analyzed_GS[,5]
All_Eggplant_Repeat <- All_Eggplant_Repeat[-which(str_detect(All_Eggplant_Repeat$Final_annotation,"organelle")),]
# Calculate the genomic proportion of individual clusters by dividing the size
# (number of reads; column 4 in All clusters df) of the clusters by Number_of_reads_nuclear
All_Eggplant_Repeat <- left_join(All_Eggplant_Repeat, N_reads_analyzed_GS %>%
select(Species_Name, Number_of_reads_nuclear),
by = "Species_Name") %>%
mutate(Genomic_proportion = Size_adjusted/Number_of_reads_nuclear)
unique(All_Eggplant_Repeat$Final_annotation)
# Read the combined cluster table
All_Eggplant_Repeat <- read.csv("All_Clusters_RE2_MiaPei.csv")
# Read the table with number of analyzed reads and genome size
N_reads_analyzed_GS <- read.csv("N_reads_analyzed_MiaPei.csv", sep = "\t")
# Check the number of species
unique(All_Eggplant_Repeat$Species_Name)
# Calculate the total 'Size_adjusted' for each species for rows containing 'organelle'
number_of_reads_by_species <- All_Eggplant_Repeat %>%
filter(grepl("organelle", Final_annotation)) %>%
group_by(Species_Name) %>%
summarise(Total_organelle_size_adjusted = sum(Size_adjusted, na.rm = TRUE))
# Append the column of total_organelle size
N_reads_analyzed_GS <- N_reads_analyzed_GS %>%
left_join(number_of_reads_by_species, by = "Species_Name")
# Add a new column for the number of reads representative of nuclear sequences as:
# the number of analyzed reads - the number of reads annotated as organelle
# (Because in the output from RE2 of this project do not have contamination,
# we don't need to minus the number of reads of contamination here.)
N_reads_analyzed_GS$Number_of_reads_nuclear <- N_reads_analyzed_GS[,3] - N_reads_analyzed_GS[,5]
All_Eggplant_Repeat <- All_Eggplant_Repeat[-which(str_detect(All_Eggplant_Repeat$Final_annotation,"organelle")),]
# Calculate the genomic proportion of individual clusters by dividing the size
# (number of reads; column 4 in All clusters df) of the clusters by Number_of_reads_nuclear
All_Eggplant_Repeat <- left_join(All_Eggplant_Repeat, N_reads_analyzed_GS %>%
select(Species_Name, Number_of_reads_nuclear),
by = "Species_Name") %>%
mutate(Genomic_proportion = Size_adjusted/Number_of_reads_nuclear)
unique(All_Eggplant_Repeat$Final_annotation)
All_Eggplant_Repeat_ag <- aggregate(Genomic_proportion~Species_Name+Final_annotation, data=All_Eggplant_Repeat, FUN=sum)
# Read the combined cluster table
All_Eggplant_Repeat <- read.csv("All_Clusters_RE2_MiaPei.csv")
All_Eggplant_Repeat <- All_Eggplant_Repeat[-which(str_detect(All_Eggplant_Repeat$Final_annotation,"organelle")),]
unique(All_Eggplant_Repeat$Final_annotation)
All_Eggplant_Repeat_ag <- aggregate(Size_adjusted~Species_Name+Final_annotation, data=All_Eggplant_Repeat, FUN=sum)
# Calculate the genomic proportion of individual clusters by dividing the size
# (number of reads; column 4 in All clusters df) of the clusters by Number_of_reads_nuclear
All_Eggplant_Repeat_ag <- left_join(All_Eggplant_Repeat_ag, N_reads_analyzed_GS %>%
select(Species_Name, Number_of_reads_nuclear),
by = "Species_Name") %>%
mutate(Genomic_proportion = Size_adjusted/Number_of_reads_nuclear)
All_Eggplant_Repeat_ag <- aggregate(Size_adjusted~Species_Name+Final_annotation, data=All_Eggplant_Repeat, FUN=sum)
# Calculate the genomic proportion of individual clusters by dividing the size
# (number of reads; column 4 in All clusters df) of the clusters by Number_of_reads_nuclear
All_Eggplant_Repeat_ag <- left_join(All_Eggplant_Repeat_ag, N_reads_analyzed_GS %>%
select(Species_Name, Genome_Size.mean2C., Number_of_reads_nuclear),
by = "Species_Name") %>%
mutate(Genomic_proportion = Size_adjusted/Number_of_reads_nuclear)
unique(All_Eggplant_Repeat$Final_annotation)
View(All_Eggplant_Repeat_ag)
View(All_Eggplant_Repeat)
